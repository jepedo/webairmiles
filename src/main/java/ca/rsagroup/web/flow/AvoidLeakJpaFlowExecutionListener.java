/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/flow/AvoidLeakJpaFlowExecutionListener.p.vm.java
 */
package ca.rsagroup.web.flow;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;

import org.hibernate.Session;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.webflow.execution.FlowSession;
import org.springframework.webflow.execution.RequestContext;
import org.springframework.webflow.persistence.JpaFlowExecutionListener;

/**
 * Circumvent https://jira.springsource.org/browse/SWF-1525
 */
public class AvoidLeakJpaFlowExecutionListener extends JpaFlowExecutionListener {

    public AvoidLeakJpaFlowExecutionListener(EntityManagerFactory entityManagerFactory, PlatformTransactionManager transactionManager) {
        super(entityManagerFactory, transactionManager);
    }

    @Override
    public void paused(RequestContext context) {
        EntityManager em = getEntityManager(context.getFlowExecutionContext().getActiveSession());

        if (em != null) {
            Session session = em.unwrap(Session.class);
            session.disconnect();
        }

        super.paused(context);
    }

    private EntityManager getEntityManager(FlowSession session) {
        return (EntityManager) session.getScope().get(PERSISTENCE_CONTEXT_ATTRIBUTE);
    }
}
